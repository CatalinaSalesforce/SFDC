<apex:page controller="MyForecastQuarterSplitsController" showHeader="true" sidebar="false">
    <apex:form >
        <apex:sectionHeader title="Manufacturing Quarter Split Forecasts"/>
        <apex:actionFunction name="saveData" action="{!saveData}" status="st" rerender="opanel" onComplete="reload();">
            <apex:param name="js" value="" assignTo="{!jsonToSave}"/>
        </apex:actionFunction>
        <apex:actionFunction name="searchMe" action="{!search}" status="st" rerender="opanel" onComplete="reload();"/>
        
        <apex:outputPanel id="dummy"/>
        <style>
            input {
                background-color : #9CCB19;
            }
            .editableCellsClass{
                background-color : #DAD295;
            }
            .nonEditableCellsClass{
                background-color : #909B86;
            }
        </style>
        <head> <title>My Forecast Quarter Splits</title> 
            <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.jQuery,'/jquery/jquery-ui.css')}" />
            <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.jQuery,'/jquery/ui.jqgrid.css')}" />
            <script src="{!URLFOR($Resource.jSonResource, '/resource/js/jquery-1.5.2.min.js')}" type="text/javascript"></script> 
            <script src="{!URLFOR($Resource.jSonResource, '/resource/js/i18n/grid.locale-en.js')}" type="text/javascript"></script>
            <script src="{!URLFOR($Resource.jSonResource, '/resource/js/jquery.jqGrid.min.js')}" type="text/javascript"></script> 
            <script src="{!URLFOR($Resource.jSonResource, '/resource/js/jquery.jqGrid.src.js')}" type="text/javascript"></script>
            <script type="text/javascript" src="{!URLFOR($Resource.jQuery,'/jquery/jquery.jqGrid.src.js')}"></script>
            <script type="text/javascript" src="{!URLFOR($Resource.jQuery,'/jquery/jquery.jqGrid-editCell.src.js')}"></script>
        </head>
        <script>
            var currPage = 1;
        </script>
        <apex:pageBlock id="pb">
            <apex:pageBlockSection id="pbs" columns="3">
                <apex:pageBlockSectionItem id="pbsi1">
                    <apex:outputLabel value="Select Stage: "/>
                    <apex:selectList size="1" value="{!stage}" style="width:110px;" >
                        <apex:selectOption itemValue="Proposal" itemLabel="Proposal"/>
                        <apex:selectOption itemValue="Contract" itemLabel="Contract"/>
                    </apex:selectList>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="pbsi2">
                    <apex:outputLabel value="Owner: "/>
                    <apex:inputField id="userLookup" value="{!opp.OwnerId}" required="false" style="background-color:white;"/>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSection ></apex:pageBlockSection>
                <apex:pageBlockSectionItem id="pbsi3">
                    <apex:outputLabel value="Quarter: "/>
                    <apex:selectList value="{!quarter}" multiselect="true" style="width:110px;" >
                        <apex:selectOption itemValue="All" itemLabel="All"/>
                        <apex:selectOption itemValue="Q1 / Q2" itemLabel="Q1 / Q2"/>
                        <apex:selectOption itemValue="Q2 / Q3" itemLabel="Q2 / Q3"/>
                        <apex:selectOption itemValue="Q3 / Q4" itemLabel="Q3 / Q4"/>
                        <apex:selectOption itemValue="Q4 / Q1" itemLabel="Q4 / Q1"/>
                    </apex:selectList>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="pbsi4">
                    <apex:outputLabel value="Account: "/>
                    <apex:inputField id="accLookup" value="{!opp.Accountid}" style="background-color:white;"/>
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>
            <center>
                <apex:commandButton value="Search" onclick="search();return false;" style="width:60px; margin-top:10px;"/>
                <apex:commandButton value="Save" onClick="save();return false;" style="width:60px; margin-top:10px;"/>
            </center>
        </apex:pageBlock>
        <apex:actionstatus id="st" startText="Loading..." startStyle="color:red; font-weight:bold;"/>
        <apex:actionstatus id="st2" startText="Saving..." startStyle="color:red; font-weight:bold;"/>
        <apex:actionstatus id="st1" startText="Searching..." startStyle="color:red; font-weight:bold;"/>
        <apex:outputPanel id="opanel">
            <script type="text/javascript">
                var rowCount;
                var saveFlag;
                var recordsToSave;
                var rowInp, nameInp;
                //Load grid if data found
                if("{!dataFound}" == "true"){
                	jQuery(document).ready(jqG);
                }
                //Method for creating jqgrid
                function jqG(){
                    saveFlag = false;
                    recordsToSave = new Array();
                    var myJSONObject = {!jSonString};
                    jQuery("#celltbl").jqGrid({ 
                        datastr : myJSONObject,
                        datatype: 'jsonstring',
                        colNames:['Opportunity','Type','Amount','Close date','Probability'],
                        colModel:[
                            {name:'opportunity',index:'opportunity', width:200},
                            {name:'type',index:'type', width:200,align:'center'},
                            {name:'amount',index:'amount', width:200,align:'right',formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces:0,prefix:"$"}},
                            {name:'closedate',index:'closedate',align:'right',width:200},
                            {name:'prob',index:'prob',align:'right',width:200}
                        ],
                        pager : jQuery('#pager'),
                        rowNum: 10,
                        scrollOffset:0,
                        height: 'auto',
                        autowidth:true,
                        viewrecords: true,
                        imgpath: 'themes/redmond/images',
                        gridview: true,
                        jsonReader: {
                            repeatitems: false,
                            page: function() { 
                                return currPage; 
                            },
                            root: "opportunities"
                        },
                        cellEdit: true,
                        subGrid: true,
                        caption: "Manufacturing Quarter Split Forecasts",
                        //define the icons in subgrid
                        subGridOptions: {
                            "plusicon"  : "ui-icon-triangle-1-e",
                            "minusicon" : "ui-icon-triangle-1-s",
                            "openicon"  : "ui-icon-arrowreturn-1-e",
                            "expandOnLoad" : false
                        },
                        subGridRowExpanded: function(subgrid_id, row_id) {
                            var subgrid_table_id, pager_id, iData = -1;
                            subgrid_table_id = subgrid_id+"_t";
                            pager_id = "p_"+subgrid_table_id;
                            $("#"+subgrid_id).html("<table id="+subgrid_table_id+" class=scroll></table><div id="+pager_id+" class=scroll></div>");
                            $.each(myJSONObject.opportunities,function(i,item){
                                if(item.id === row_id) {
                                    iData = i;
                                    return false;
                                }
                            });
                            if (iData == -1) {
                                return; // no data for the subgrid
                            }
                            jQuery("#"+subgrid_table_id).jqGrid({
                                datastr : myJSONObject.opportunities[iData],
                                datatype: 'jsonstring',
                                colNames: ['ProForId','Program Name','Forecast Amount','Previous Quarter Amount','Next Quarter Amount'],
                                colModel: [
                                    {name:"progforecastid",index:"progforecastid",width:1,hidden:true},
                                    {name:"programname",index:"programname",width:400,sortable:true,classes:'nonEditableCellsClass'},
                                    {name:"progamount",index:"progamount",width:200,sortable:true,align:'right',formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces:0,prefix:"$"},classes:'nonEditableCellsClass'},
                                    {name:"preqtramt",index:"preqtramt",width:200,sortable:false,align:'right',editable:true,editrules:{required:true,number:true,minValue:0},formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces:0,prefix:"$"},classes:'editableCellsClass'},
                                    {name:"nextqtramt",index:"nextqtramt",width:200,sortable:false,align:'right',editable:true,editrules:{required:true,number:true,minValue:0},formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces:0,prefix:"$"},classes:'editableCellsClass'}
                                ],
                                rowNum:20,
                                //pager: pager_id,
                                sortname: 'programname',
                                sortorder: "asc",
                                height: 'auto',
                                autowidth:true,
                                cellEdit: true,
                                cellsubmit: 'clientArray',
                                jsonReader: {
                                    repeatitems: false,
                                    page: function() { return 1; },
                                    root: "progForecasts"
                                },
                                afterEditCell: function (id,name,val,iRow,iCol){
                                    $("#"+id)[0].cells.item(iCol).getElementsByTagName("input").namedItem(name).select();
                                    //rowInp = iRow;
                                    //nameInp = name;
                                    //setTimeout("selectCell()",50);
                                    //document.getElementById(iRow+'_'+name).select();
                                },
                                afterSaveCell : function(rowid,name,val,iRow,iCol) {
                                    var rowObj = $("#"+subgrid_table_id).getRowData(rowid);
                                    saveFlag = true;
                                    getSavedData(rowObj);
                                    jQuery("#"+subgrid_table_id).jqGrid('setCell',rowid,name,val,{'font-weight':'bold','color':'red','background-color':''});
                                },
                                gridComplete: function () {
                                    rowCount = jQuery("#"+subgrid_table_id).getDataIDs().length;
                                }
                            });
                        },
                        onPaging : function(id) {
                            currPage = $('#celltbl').getGridParam('page');
                            var answer = false;
                            if(saveFlag == true){//If user made changes in the editable cells
                                answer = confirm("The changes are not saved. Do you want to save changes?")
                            }
                            if(answer){
                                save();
                                //return 'stop';
                            }else{
                                saveFlag = false;
                            }
                        }
                    }); 
                    jQuery("#celltbl")
                        .navGrid('#pager',{edit:false,add:false,del:false,search:false})
                        .navButtonAdd('#pager',{
                           caption:"Expand All", 
                           buttonicon:"ui-icon-add", 
                           onClickButton: function(){ 
                                var rowIds = $("#celltbl").getDataIDs();
                                $.each(rowIds, function (index, rowId) {
                                    $("#celltbl").expandSubGridRow(rowId); 
                                });
                           }, 
                           position:"last"
                        })
                        .navButtonAdd('#pager',{
                           caption:"Collapse All", 
                           buttonicon:"ui-icon-add", 
                           onClickButton: function(){ 
                                var rowIds = $("#celltbl").getDataIDs();
                                $.each(rowIds, function (index, rowId) {
                                        $("#celltbl").collapseSubGridRow(rowId); 
                                });
                           }, 
                           position:"last"
                        });
                }
                function selectCell(){
                    document.getElementById(rowInp+'_'+nameInp).select();
                }
                
                //Method Adding changed data to the object for save.
                //Calling on event: AfterSaveCell.
                function getSavedData(rowObj){
                    var record = new Object();
                    record.progId = rowObj['progforecastid'];
                    record.preQtrAmt = rowObj['preqtramt'];
                    record.nextQtyAmt = rowObj['nextqtramt'];
                    record.forecastAmt = rowObj['progamount'];
                    recordsToSave.push(record);
                }
                
                //Method for search button
                function search(){
                    var answer = false;
                    if(saveFlag == true){
                        answer = confirm("The changes are not saved. Do you want to Save the changes?")
                    }
                    if(answer){
                        save();
                    }else{
                        searchMe();
                    }
                }
                
                //Method for saving changes.
                //Validation: prior qtr amt + next qtr amt < forecast amount.
                //Creating JSON string to save 
                function save(){
                    if(saveFlag){
                        for(i = 0 ; i < recordsToSave.length ; i++){
                           for(j = i+1 ; j < recordsToSave.length ; j++){
                               if(recordsToSave[i].progId == recordsToSave[j].progId){
                                    recordsToSave[i].progId = 0;
                               }
                           }
                        }
                        var jsonString='{"programForecast":[';
                        var showAlert = false;
                        for(i=0 ; i < recordsToSave.length ; i++){
                            if(recordsToSave[i].progId != 0){
                                var preAmt = parseFloat(recordsToSave[i].preQtrAmt);
                                var nextAmt = parseFloat(recordsToSave[i].nextQtyAmt);
                                var forAmt = parseFloat(recordsToSave[i].forecastAmt); 
                                if((preAmt+nextAmt) != forAmt){
                                    showAlert = true;
                                }else{
                                    jsonString +='{"progforecastid":"'+recordsToSave[i].progId+'","preqtramt":"'+recordsToSave[i].preQtrAmt+'","nextqtramt":"'+recordsToSave[i].nextQtyAmt+'"},';
                                }
                            }
                        }
                        if(showAlert){
                            alert('Sum of Prior Quarter Amount and Next Quarter Amount must be equal to Forecast Amount.');
                        }else{
                            jsonString = jsonString.substring(0,jsonString.length-1);
                            jsonString += ']}';
                            saveFlag = false;
                            //Clear updated data from array
                            recordsToSave = recordsToSave.splice(recordsToSave.length);
                            saveData(jsonString);
                        }
                    }else{
                        alert('No Changes To Save.')
                    }
                }
                
                //Unloading and reloading jqGrid for refresh
                function reload(){
                    //$('#celltbl').jqGrid('GridUnload');
                    //jqG();
                    //jQuery("#celltbl").trigger("reloadGrid");
                }
            </script>
            <apex:pageBlock rendered="{!dataFound}">
                <table id="celltbl"></table> <div id="pager"></div>
            </apex:pageBlock>
            <apex:pageMessage severity="INFO" strength="3" summary="No Records Found." rendered="{!(!dataFound)}"/>
        </apex:outputPanel>
    </apex:form>
</apex:page>