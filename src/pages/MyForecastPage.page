<apex:page Controller="GetAdPeriodController" id="pg" showHeader="true" sidebar="false" standardStyleSheets="false">
    <style>
        span.cellWithoutBackground {
            display:block;
            background-image:none;
            margin-right:-2px;
            margin-left:-2px;
            height:14px;
            padding:4px;
        }
        input {
            background-color : #9CCB19;
        }
        .editableCellsClass{
            background-color : #DAD295;
        }
        .nonEditableCellsClass{
            background-color : #909B86;
        }
        .not-editable-cell{
            background-color : #909B86;
        }
    </style>
    <style>
        .selected { color:red; }
        .highlight { background:yellow; }
    </style>
    <script>
        var isCollapsed = true;
        var oppId = '{!opportunityId}';
        if(oppId.length > 0){
            isCollapsed = false;
        }
    </script>
    <apex:sectionHeader title="{!pageName}"/>
    <apex:form id="frm">
        <!-- Refresh action function rerender op1 -->
        <apex:actionFunction name="refresh" action="{!refresh}" rerender="op1">
            <apex:param name="cd" value="" assignTo="{!cDate}"/>
            <apex:param name="rt" value="" assignTo="{!rType}"/>
            <apex:param name="st" value="" assignTo="{!stage}"/>
            <apex:param name="an" value="" assignTo="{!accountName}"/>
            <apex:param name="ou" value="" assignTo="{!oppUser}"/>
            <apex:param name="na" value="" assignTo="{!navigation}"/>
        </apex:actionFunction>
        <!-- Refresh action function for reset. rerender form -->
        <apex:actionFunction name="refresh2" action="{!refresh}" rerender="frm">
            <apex:param name="cd" value="" assignTo="{!cDate}"/>
            <apex:param name="rt" value="" assignTo="{!rType}"/>
            <apex:param name="st" value="" assignTo="{!stage}"/>
            <apex:param name="an" value="" assignTo="{!accountName}"/>
            <apex:param name="ou" value="" assignTo="{!oppUser}"/>
            <apex:param name="na" value="" assignTo="{!navigation}"/>
        </apex:actionFunction>
        <apex:actionFunction name="saveJSon" action="{!saveJSon}" rerender="dummy" onComplete="refresh(cDateString,type,stage,accountId,oppUser,'none');">
            <apex:param name="js" value="" assignTo="{!jsonToSave}"/>
            <apex:param name="cd" value="" assignTo="{!cDateString}"/>
            <apex:param name="rt" value="" assignTo="{!recType}"/>
        </apex:actionFunction>
        <apex:actionFunction name="refreshQuarters" rerender="quartersList" />
        <apex:actionFunction name="setShowProgramFilter" action="{!setShowProgramFilter}" rerender="pbs" />
        <apex:outputpanel id="dummy">
        </apex:outputpanel>
        <apex:pageBlock id="pb">
            <apex:pageBlockSection id="pbs" columns="3">
                <apex:pageBlockSectionItem id="pbsi1">
                    <apex:outputLabel value="{!$Label.Retail_Manufacturing}"/>
                    <apex:selectList size="1" onChange="getType(this);refreshQuarters();setShowProgramFilter();return false;" value="{!rType}" >
                        <apex:selectOptions value="{!accounttypes}" />
                    </apex:selectList>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="pbsi2">
                    <apex:outputLabel value="{!$Label.Owner}"/>
                    <apex:inputField id="userLookup" value="{!opp.OwnerId}" required="false" style="background-color:white;"/>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="pbsi3">
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="pbsi4">
                    <apex:outputLabel value="{!$Label.Proposal_Contract}" rendered="{!contractProposalFlag}"/>
                    <apex:selectList size="1" style="width:110px;" onChange="getStage(this);setShowProgramFilter();return false;" value="{!stage}" rendered="{!contractProposalFlag}">
                        <apex:selectOption itemValue="All" itemLabel="{!$Label.All}"/>
                        <apex:selectOption itemValue="Proposal" itemLabel="{!$Label.Proposal}"/>
                        <apex:selectOption itemValue="Contract" itemLabel="{!$Label.Contract}"/>
                    </apex:selectList>
                </apex:pageBlockSectionItem>
                <!-- Cloud62 5/31/2012 - Added Opportunity name filter -->
                <apex:pageBlockSectionItem id="pbsiOpp">
                    <apex:outputLabel value="{!$Label.Opportunity_Name}: "/>
                    <apex:inputText id="oppNameFilter" value="{!oppName}" style="background-color:white;"/>
                </apex:pageBlockSectionItem>
                
                <apex:pageBlockSectionItem id="pbsi6">
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="pbsi7">
                    <apex:outputLabel value="{!$Label.ProgramStatus}: " rendered="{!showProgramFilter}"/>
                    <apex:selectList size="1" value="{!ProgramStatus}" rendered="{!showProgramFilter}" >
                        <apex:selectOption itemValue="All" itemLabel="{!$Label.All}"/>
                        <apex:selectOption itemValue="Active" itemLabel="{!$Label.Active}"/>
                        <apex:selectOption itemValue="Inactive with Overages" itemLabel="{!$Label.Inactive_with_Overages}"/>
                        <apex:selectOption itemValue="Inactive with Shortfall" itemLabel="{!$Label.Inactive_with_Shortfall}"/>
                    </apex:selectList>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="pbsi8">
                    <apex:outputLabel value="{!$Label.Program_Amount} &gt;= " escape="false"/>
                    <apex:inputText value="{!progAmt}" style="background-color:white;"/>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="pbsi9">
                </apex:pageBlockSectionItem>
                
                <apex:pageBlockSectionItem id="pbsi16">
                    <apex:outputLabel value="{!$Label.Year}"/>
                    <apex:selectList value="{!year}" style="width:110px;" size="1">
                        <apex:selectOptions value="{!years}" />
                    </apex:selectList>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="pbsi5" rendered="{!notShowProgramFilter}">
                    <apex:outputLabel value="{!$Label.Account}" rendered="{!notShowProgramFilter}"/>
                    <apex:inputField id="accLookup2" value="{!opp.Accountid}" style="background-color:white;" rendered="{!notShowProgramFilter}"/>
                    <!-- <apex:inputText id="accLookup" value="{!accountName}" style="background-color:white;" rendered="{!notShowProgramFilter}"/> -->
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="pbsi24" rendered="{!showProgramFilter}">
                    <apex:outputLabel value="{!$Label.Account}" rendered="{!showProgramFilter}"/>
                    <apex:inputText id="accLookup" value="{!accountName}" style="background-color:white;" rendered="{!showProgramFilter}"/>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="pbsi13">
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="pbsi32">
                    <apex:outputLabel value="Variance: "/>
                    <apex:selectList value="{!variance}" style="width:110px;" size="1">
                        <apex:selectOptions value="{!variances}" />
                    </apex:selectList>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="pbsi33">
                    <apex:outputLabel value="Proposal Number: "/>
                    <apex:inputText id="proposalNum" value="{!proposalNumber}" style="background-color:white;"/>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="pbsi34">
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="pbsi12" rendered="{!showProgramFilter}">
                    <apex:outputLabel value="{!$Label.Quarter}"/>
                    <apex:selectList value="{!quarter}" multiselect="true" style="width:110px;" size="3" id="quartersList">
                        <apex:selectOptions value="{!quarters}" />
                    </apex:selectList>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="pbsi25" rendered="{!notShowProgramFilter}">
                    <apex:outputLabel value="{!$Label.Cycle}"/>
                    <apex:selectList value="{!cycle}" multiselect="true" style="width:110px;" size="3" id="cyclesList">
                        <apex:selectOptions value="{!cycles}" />
                    </apex:selectList>
                </apex:pageBlockSectionItem>
                
                <apex:pageBlockSectionItem id="contractNum">
                    <apex:outputLabel value="Contract Number: "/>
                    <apex:inputText id="contractNumber" value="{!contractNumber}" style="background-color:white;"/>
                </apex:pageBlockSectionItem>              
                <apex:pageBlockSectionItem />                 
                <apex:pageBlockSectionItem id="specialistList" rendered="{!showProgramFilter}">
                    <apex:outputLabel value="Specialist: " />
                    <apex:selectList value="{!specialistId}" size="1"  style="width:110px;" >
                        <apex:selectOptions value="{!specialist}" />
                    </apex:selectList>      
                </apex:pageBlockSectionItem>  
        
            </apex:pageBlockSection>                               
        </apex:pageBlock>
        
        <table width="73%">
            <tr>
                <td align="right">
                    <apex:commandButton value="{!$Label.Search}" style="width=80px;" onClick="search();return false;"/>
                    <apex:commandButton value="{!$Label.Reset}" style="width=80px;" onClick="resetMe();return false;" rerender="pb"/>
                </td>
            </tr>
        </table>
        
        <head> <title>My Forecast Page</title> 
            <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.jQuery, 'jquery/jquery-ui.css')}" />
            <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.jQuery, 'jquery/ui.jqgrid.css')}" />
            <script src="{!URLFOR($Resource.jSonResource, '/resource/js/jquery-1.5.2.min.js')}" type="text/javascript"></script> 
            <script src="{!URLFOR($Resource.jSonResource, '/resource/js/i18n/grid.locale-en.js')}" type="text/javascript"></script>
            <script src="{!URLFOR($Resource.jSonResource, '/resource/js/jquery.jqGrid.min.js')}" type="text/javascript"></script> 
            <script src="{!URLFOR($Resource.jSonResource, '/resource/js/jquery.jqGrid.src.js')}" type="text/javascript"></script>
            <script type="text/javascript">
                var currPage = 1;
                var updatedRows = new Array();
                var updatedRowsMap = {};
                var stage = 'All';
                var accountId = '';
                var oId = "{!opportunityId}";
                var type;
                type = "{!rType}";
                var oppUser = '';
                var headings = new Array();
                var rowCount;
                var saveFlag = false;
                var startMonth='';
                var startYear='';           
                var cMonth;
                var cYear;
                var lastMonth;
                var lastMonthYear;                
                var currentDate = new Date;
                var cDateString;
                
                jQuery(document).ready(linkMe);
                
                //Method calling jqG() when grid loads first time
                function linkMe(){
                    currentDate = new Date();
                    cDateString = currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate();
                    //If page opens from Opportunity detail page
                    if(oId != ''){
                        type = "{!rType}";
                    }else{
                        var country = "{!country}";
                        if (country == 'US'){
                            type = 'Manufacturing';
                        } else if (country == 'FR'){
                            type = 'Manufacturing France';
                        } else if (country == 'IT'){
                            type = 'Manufacturing Italy';
                        } else if (country == 'GER'){
                            type = 'Manufacturing Germany';
                        } else if (country == 'JP'){
                            type = 'Manufacturing Japan';
                        }else {
                            type = 'Manufacturing';
                        }
                    }
                    stage = 'All';
                    accountId = '';
                    oppUser = '';
                    jqG();
                }
                
                //Method for next link (Loading next 6 Ad Periods) 
                function nextCycle(){
                    document.getElementById('nxtStatus').style.display='';
                    var answer = true;
                    if(saveFlag == true){//If user made changes in the editable cells
                        answer = confirm("The changes are not saved. Do you want to Save the changes?")
                    }
                    if(answer && saveFlag){
                        saveData();
                        saveFlag = false;
                    }else{
                        //Clear updated rows from array
                        updatedRows = updatedRows.splice(updatedRows.length);
                        saveFlag = false;
                    }
                    if(saveFlag == false){
                        if(type == 'Retail'){
                            var mno = currentDate.getMonth();
                            mno += 7;
                            currentDate.setMonth(mno);
                        }else if(type == 'Manufacturing'){
                            var dno = currentDate.getDate();
                            dno += (7*28);    //Next seven cycle
                            currentDate.setDate(dno);
                        }else if(type == 'Manufacturing France'){
                            var dno = currentDate.getDate();
                            dno += (7*74);    //Next seven cycle
                            currentDate.setDate(dno);
                        }else if(type == 'Manufacturing Italy'){
                            var dno = currentDate.getDate();
                            dno += (7*74);    //Next seven cycle
                            currentDate.setDate(dno);
                        }else if(type == 'Manufacturing Germany'){
                            var dno = currentDate.getDate();
                            dno += (7*74);    //Next seven cycle
                            currentDate.setDate(dno);
                        }
                        
                        cDateString = currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate();
                        refresh(cDateString,type,stage,accountId,oppUser,'next');
                    }
                }
                
                //Method for previous link (Loading last 6 Ad Periods) 
                function preCycle(){
                    document.getElementById('preStatus').style.display='';
                    var answer = true;
                    if(saveFlag == true){
                        answer = confirm("The changes are not saved. Do you want to Save the changes?")
                    }
                    if(answer && saveFlag){
                        saveData();
                        saveFlag = false;
                    }else{
                        //Clear updated rows from array
                        updatedRows = updatedRows.splice(updatedRows.length);
                        saveFlag = false;
                    }
                    if(saveFlag == false){
                        if(type == 'Retail'){
                            var mno = currentDate.getMonth();
                            mno -= 7;
                            currentDate.setMonth(mno);
                        }else if(type == 'Manufacturing'){
                            var dno = currentDate.getDate();
                            dno -= (7*28);    //Last seven cycle
                            currentDate.setDate(dno);
                        }else if(type == 'Manufacturing France'){
                            var dno = currentDate.getDate();
                            dno -= (7*74);    //Next seven cycle
                            currentDate.setDate(dno);
                        }else if(type == 'Manufacturing Italy'){
                            var dno = currentDate.getDate();
                            dno -= (7*74);    //Next seven cycle
                            currentDate.setDate(dno);
                        }else if(type == 'Manufacturing Germany'){
                            var dno = currentDate.getDate();
                            dno -= (7*74);    //Next seven cycle
                            currentDate.setDate(dno);
                        }
                        
                        cDateString = currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate();
                        refresh(cDateString,type,stage,accountId,oppUser,'pre');
                    }
                }
                
                //Method getting selected type. Calling on change of type picklist
                function getType(obj){
                    //If page opens from Opportunity detail page
                    if(oId != ''){
                        type = "{!rType}";
                    }else{
                        type = obj.value;
                    }
                }
                
                //Method getting selected stage. Calling on change of stage picklist
                function getStage(obj){
                    stage = obj.value;
                }
                
                //Method to reload the grid based on the filter. Calling on hit of Search button
                function search(){
                    document.getElementById('searchStatus').style.display='';
                    var answer = true;
                    if(saveFlag == true){
                        answer = confirm("The changes are not saved. Do you want to Undo the changes and Continue?")
                    }
                    if(answer){
                        //Undo the changes
                        saveFlag = false;
                        updatedRows = updatedRows.splice(updatedRows.length);
                        if (type == 'Manufacturing France' || type == 'Manufacturing Italy' || type == 'Manufacturing Germany'){
                            accountId = document.getElementById('pg:frm:pb:pbs:pbsi5:accLookup2').value;                            
                        } else {
                            accountId = document.getElementById('pg:frm:pb:pbs:pbsi24:accLookup').value;
                        }
                        oppUser = document.getElementById('pg:frm:pb:pbs:pbsi2:userLookup').value;
                        cDateString = currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate();
                        refresh(cDateString,type,stage,accountId,oppUser, 'search');
                    }
                }
                
                function resetMe(){
                    document.getElementById('loadStatus').style.display='';
                    refresh2(cDateString,type,stage,accountId,oppUser, 'reset');
                }
                
                //Unloading and reloading jqGrid
                function reload(){
                    $('#celltbl').jqGrid('GridUnload');
                    jqG();
                    jQuery("#celltbl").trigger("reloadGrid");
                }
                
                //Method for save button
                function save(){
                    if(saveFlag == true){
                        saveData();
                    }else{
                        alert('No changes done.')
                    }
                }
                //Method For saving records
                function saveData() {
                    document.getElementById('saveStatus').style.display='';
                    saveFlag = false;
                    for(i = 0 ; i < updatedRows.length ; i++){
                        for(j = i+1 ; j < updatedRows.length ; j++){
                            if(updatedRows[i] == updatedRows[j]){
                                updatedRows[j] = 0;
                            }
                        }
                    }
                    var uniqueRows = new Array();
                    for(i = 0 ; i < updatedRows.length ; i++){
                        if(updatedRows[i] != 0){
                            uniqueRows.push(updatedRows[i]);
                        }
                    }
                    //Creting JSON String for save
                    var jsonString='{"programs":[';
                    for(i = 0 ; i < uniqueRows.length ; i++){
                        var rowId = $("#celltbl").getRowData(updatedRowsMap[uniqueRows[i]]);
                        jsonString +='{"ProgId":"'+rowId['ProgId']+'","forecast1":"'+rowId[headings[7]]+'",';
                        jsonString +='"forecast2":"'+(rowId[headings[8]]==''? $("#"+uniqueRows[i]+"_"+headings[8]).val() : rowId[headings[8]])+'",';
                        jsonString +='"forecast3":"'+(rowId[headings[9]]==''? $("#"+uniqueRows[i]+"_"+headings[9]).val() : rowId[headings[9]])+'",';
                        jsonString +='"forecast4":"'+(rowId[headings[10]]==''? $("#"+uniqueRows[i]+"_"+headings[10]).val() : rowId[headings[10]])+'",';
                        jsonString +='"forecast5":"'+(rowId[headings[11]]==''? $("#"+uniqueRows[i]+"_"+headings[11]).val() : rowId[headings[11]])+'",';
                        jsonString +='"forecast6":"'+(rowId[headings[12]]==''? $("#"+uniqueRows[i]+"_"+headings[12]).val() : rowId[headings[12]])+'",';
                        jsonString +='"forecast7":"'+(rowId[headings[13]]==''? $("#"+uniqueRows[i]+"_"+headings[13]).val() : rowId[headings[13]])+'",';
                        jsonString +='"forecast8":"'+(rowId[headings[14]]==''? $("#"+uniqueRows[i]+"_"+headings[14]).val() : rowId[headings[14]])+'",';
                        jsonString +='"forecast9":"'+(rowId[headings[15]]==''? $("#"+uniqueRows[i]+"_"+headings[15]).val() : rowId[headings[15]])+'",';
                        jsonString +='"forecast10":"'+(rowId[headings[16]]==''? $("#"+uniqueRows[i]+"_"+headings[16]).val() : rowId[headings[16]])+'",';
                        jsonString +='"forecast11":"'+(rowId[headings[17]]==''? $("#"+uniqueRows[i]+"_"+headings[17]).val() : rowId[headings[17]])+'",';
                        jsonString +='"forecast12":"'+(rowId[headings[18]]==''? $("#"+uniqueRows[i]+"_"+headings[18]).val() : rowId[headings[18]])+'"';
                        if(type == 'Manufacturing'){
                            jsonString +=',"forecast13":"'+(rowId[headings[19]]==''? $("#"+uniqueRows[i]+"_"+headings[19]).val() : rowId[headings[19]])+'"';
                        }
                        jsonString +='},';
                    }
                    jsonString = jsonString.substring(0,jsonString.length-1);
                    jsonString += ']}';
                    
                    //Clear updated rows from array
                    updatedRows = updatedRows.splice(updatedRows.length);
                    //Calling action function to save the changes
                    saveJSon(jsonString,cDateString,type);
                }
                
            </script>
        </head>
        <body> 
            <apex:outputPanel id="op1">
                <script>
                    //Method creating JQGrid
                    function jqG(){                      
                        var firstCellClassName = "{!isFirstcolEditable}" == "true" ? 'editableCellsClass' : 'nonEditableCellsClass';
                        var heads = "{!adPeriodNames}";
                        var headList = heads.split(",");
                        headings = new Array();
                        headings[0] = 'Id';
                        headings[1] = 'ProgId';
                        headings[2] = 'Opportunity';
                        headings[3] = '{!$Label.Program_Name}';
                        //Setting heading as Weighted forecast Amount in case of Proposal and Contract in case of contract
                        if(stage == 'Proposal'){
                            headings[4] = '{!$Label.Weighted_Forecast_Amount}';
                        }else{
                            headings[4] = '{!$Label.Contract}';
                        }
                        if(type == 'Manufacturing France'){
                            headings[4] = '';
                        }
                        if(type == 'Manufacturing Germany'){
                            headings[4] = 'Contract Amount';
                        }
                        headings[5] = '{!$Label.Program_Amount}';
                        headings[6] = '{!$Label.Variance}';
                        var idx = 7;
                        for (i = 0 ; i < headList.length ; i++){
                            headings[idx++] = headList[i];
                        }
                        headings[idx++] = 'cell1';
                        headings[idx++] = 'cell2';
                        headings[idx++] = 'cell3';
                        headings[idx++] = 'cell4';
                        headings[idx++] = 'cell5';
                        headings[idx++] = 'cell6';
                        headings[idx++] = 'cell7';
                        headings[idx++] = 'cell8';
                        headings[idx++] = 'cell9';
                        headings[idx++] = 'cell10';
                        headings[idx++] = 'cell11';
                        headings[idx++] = 'cell12';
                        if(type == 'Manufacturing'){
                            headings[idx++] = 'cell13';
                        }
                        
                        //jsonPageURL = '/apex/MyforecastJSonPage?currDate='+cDateString+'&type='+type+'&stage='+stage+'&accountId='+accountId+'&oppUser='+oppUser+'&opportunityId='+oId;
                      if(type != 'Manufacturing'){
                        jQuery("#celltbl").jqGrid({ 
                            //url:jsonPageURL,
                            //url:'/apex/MyforecastJSonPage?type=Retail', 
                            //datatype: 'json', 
                            data: {!jSonString},
                            datatype: 'local',
                            mtype: 'GET', 
                            colNames:headings, 
                            colModel :[ 
                                {name:'Id', index:'Id', width:1, hidden: true, classes:'nonEditableCellsClass'},
                                {name:'ProgId', index:'ProgId', width:1, hidden: true, classes:'nonEditableCellsClass'},
                                {name:'opportunity', index:'opportunity', width:0, hidden: true, classes:'nonEditableCellsClass'},
                                {name:'ProgramName', index:'ProgramName',width: 200, autowidth: false, classes:'nonEditableCellsClass'}, 
                                {name:'WeightedForecast', index:'WeightedForecast', width: 80, align:'right', formatter:currencyFmatter, classes:'nonEditableCellsClass'},
                                {name:'ProgramAmount', index:'ProgramAmount', width:90, align:'right',formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"}, classes:'nonEditableCellsClass'}, 
                                {name:'Variance', index:'Variance', width:80, align:'right', 
                                        formatter: function (cellvalue){
                                                        var color;
                                                        var val = Number(cellvalue);
                                                        if(val < 0){
                                                            color = 'red';
                                                        }else if(val > 0){
                                                            color = 'green';
                                                        }else{
                                                            color = '#909B86';
                                                        }
                                                        if(cellvalue != ''){
                                                            cellvalue= "{!currencySymbol}"+thousandSeparator(cellvalue);
                                                            //cellvalue= cellvalue.substring(0,cellvalue.length-3);
                                                        }
                                                        return '<span class="cellWithoutBackground" style="background-color:' + color + ';">' + cellvalue + '</span>';
                                                   }, 
                                        formatoptions:{thousandsSeparator:",",decimalPlaces:0, prefix:"{!currencySymbol}"}, classes:'nonEditableCellsClass'}, 
                                {name:headings[7], index:headings[7], width:80, align:'right', editable:true, editrules:{required:true,number:true,minValue:0}, sortable:false, formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"},classes:'editableCellsClass'}, 
                                {name:headings[8], index:headings[8], width:80, align:'right', editable:true, editrules:{required:true,number:true,minValue:0}, sortable:false, formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"},classes:'editableCellsClass'},
                                {name:headings[9], index:headings[9], width:80, align:'right', editable:true, editrules:{required:true,number:true,minValue:0}, sortable:false, formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"},classes:'editableCellsClass'},
                                {name:headings[10], index:headings[10], width:80, align:'right', editable:true, editrules:{required:true,number:true,minValue:0}, sortable:false, formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"},classes:'editableCellsClass'},
                                {name:headings[11], index:headings[11], width:80, align:'right', editable:true, editrules:{required:true,number:true,minValue:0}, sortable:false, formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"},classes:'editableCellsClass'},
                                {name:headings[12], index:headings[12], width:80, align:'right', editable:true, editrules:{required:true,number:true,minValue:0}, sortable:false, formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"},classes:'editableCellsClass'},
                                {name:headings[13], index:headings[13], width:80, align:'right', editable:true, editrules:{required:true,number:true,minValue:0}, sortable:false, formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"},classes:'editableCellsClass'},
                                {name:headings[14], index:headings[14], width:80, align:'right', editable:true, editrules:{required:true,number:true,minValue:0}, sortable:false, formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"},classes:'editableCellsClass'},
                                {name:headings[15], index:headings[15], width:80, align:'right', editable:true, editrules:{required:true,number:true,minValue:0}, sortable:false, formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"},classes:'editableCellsClass'},
                                {name:headings[16], index:headings[16], width:80, align:'right', editable:true, editrules:{required:true,number:true,minValue:0}, sortable:false, formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"},classes:'editableCellsClass'},
                                {name:headings[17], index:headings[17], width:80, align:'right', editable:true, editrules:{required:true,number:true,minValue:0}, sortable:false, formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"},classes:'editableCellsClass'},
                                {name:headings[18], index:headings[18], width:80, align:'right', editable:true, editrules:{required:true,number:true,minValue:0}, sortable:false, formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"},classes:'editableCellsClass'},
                                {name:headings[19], index:headings[19], width:1, hidden:true},
                                {name:headings[20], index:headings[20], width:1, hidden:true},
                                {name:headings[21], index:headings[21], width:1, hidden:true},
                                {name:headings[22], index:headings[22], width:1, hidden:true},
                                {name:headings[23], index:headings[23], width:1, hidden:true},
                                {name:headings[24], index:headings[24], width:1, hidden:true},
                                {name:headings[25], index:headings[25], width:1, hidden:true},
                                {name:headings[26], index:headings[26], width:1, hidden:true},
                                {name:headings[27], index:headings[27], width:1, hidden:true},
                                {name:headings[28], index:headings[28], width:1, hidden:true},
                                {name:headings[29], index:headings[29], width:1, hidden:true},
                                {name:headings[30], index:headings[30], width:1, hidden:true},
                            ],
                            height:'auto',
                            autowidth: true,
                            viewrecords: true, 
                            pager: jQuery('#pager'), 
                            rowNum:75, 
                            rowList:[25,50,75], 
                            sortname: 'Id', 
                            sortorder: "asc", 
                            imgpath: 'themes/redmond/images',
                            grouping:true, 
                            groupingView : { 
                                groupField : ['opportunity'], 
                                groupText : ['<b>{0} - {1} Item(s)</b>'], 
                                groupCollapse : isCollapsed,
                                groupColumnShow : [false], 
                                groupOrder: ['asc'] 
                            },
                            caption: '{!$Label.Forecast_Information}' ,
                            forceFit : true, 
                            cellEdit: true,
                            cellsubmit: 'clientArray',
                            afterEditCell: function (id,name,val,iRow,iCol){
                                document.getElementById(iRow+'_'+name).select();
                                saveFlag = true;
                                updatedRows.push(iRow);
                                updatedRowsMap[iRow]= id;
                            },
                            loadComplete: function(){                                 
                                var rowIds = $("#celltbl").jqGrid('getDataIDs');
                                $.each(rowIds, function (i, row) {
                                    var rowData = $("#celltbl").getRowData(row);
                                    if(rowData.cell1 === 'false'){
                                        $("#celltbl").jqGrid("setCell", row, headings[7], "", "not-editable-cell");
                                    }
                                    if(rowData.cell2 === 'false'){
                                        $("#celltbl").jqGrid("setCell", row, headings[8], "", "not-editable-cell");
                                    }
                                    if(rowData.cell3 === 'false'){
                                        $("#celltbl").jqGrid("setCell", row, headings[9], "", "not-editable-cell");
                                    }                                   
                                    if(rowData.cell4 === 'false'){
                                        $("#celltbl").jqGrid("setCell", row, headings[10], "", "not-editable-cell");
                                    }
                                    if(rowData.cell5 === 'false'){
                                        $("#celltbl").jqGrid("setCell", row, headings[11], "", "not-editable-cell");
                                    }
                                    if(rowData.cell6 === 'false'){
                                        $("#celltbl").jqGrid("setCell", row, headings[12], "", "not-editable-cell");
                                    }
                                    if(rowData.cell7 === 'false'){
                                        $("#celltbl").jqGrid("setCell", row, headings[13], "", "not-editable-cell");
                                    }
                                    if(rowData.cell8 === 'false'){
                                        $("#celltbl").jqGrid("setCell", row, headings[14], "", "not-editable-cell");
                                    }
                                    if(rowData.cell9 === 'false'){
                                        $("#celltbl").jqGrid("setCell", row, headings[15], "", "not-editable-cell");
                                    }
                                    if(rowData.cell10 === 'false'){
                                        $("#celltbl").jqGrid("setCell", row, headings[16], "", "not-editable-cell");
                                    }
                                    if(rowData.cell11 === 'false'){
                                        $("#celltbl").jqGrid("setCell", row, headings[17], "", "not-editable-cell");
                                    }
                                    if(rowData.cell12 === 'false'){
                                        $("#celltbl").jqGrid("setCell", row, headings[18], "", "not-editable-cell");
                                    }
                                }); 
                            },
                            afterSaveCell : function(rowid,name,val,iRow,iCol) {
                                saveFlag = true;
                                updatedRows.push(iRow);
                                updatedRowsMap[iRow]= rowid;
                                jQuery("#celltbl").jqGrid('setCell',rowid,name,val,{'font-weight':'bold','color':'red','background-color':''});
                            },
                            gridComplete: function () {
                                rowCount = jQuery("#celltbl").getDataIDs().length;
                            },
                            onPaging: function(id){ 
                                var answer = true;
                                if(saveFlag == true){//If user made changes in the editable cells
                                    answer = confirm("The changes are not saved. Do you want to save changes?")
                                }
                                if(answer && saveFlag){
                                    saveData();
                                    saveFlag = false;
                                    //return 'stop';
                                }else{
                                    //Clear updated rows from array
                                    updatedRows = updatedRows.splice(updatedRows.length);
                                    saveFlag = false;
                                }
                            }
                        });
                      }else if(headList.length == 13){
                          jQuery("#celltbl").jqGrid({ 
                            //url:jsonPageURL,
                            //url:'/apex/MyforecastJSonPage?type=Retail', 
                            //datatype: 'json', 
                            data: {!jSonString},
                            datatype: 'local',
                            mtype: 'GET', 
                            colNames:headings, 
                            colModel :[ 
                                {name:'Id', index:'Id', width:1, hidden: true, classes:'nonEditableCellsClass'},
                                {name:'ProgId', index:'ProgId', width:1, hidden: true, classes:'nonEditableCellsClass'},
                                {name:'opportunity', index:'opportunity', width:0, hidden: true, classes:'nonEditableCellsClass'},
                                {name:'ProgramName', index:'ProgramName',width: 200, autowidth: false, classes:'nonEditableCellsClass'}, 
                                {name:'WeightedForecast', index:'WeightedForecast', width: 80, align:'right', formatter:currencyFmatter, classes:'nonEditableCellsClass'},
                                {name:'ProgramAmount', index:'ProgramAmount', width:90, align:'right',formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"}, classes:'nonEditableCellsClass'}, 
                                {name:'Variance', index:'Variance', width:80, align:'right', 
                                        formatter: function (cellvalue){
                                                        var color;
                                                        var val = Number(cellvalue);
                                                        if(val < 0){
                                                            color = 'red';
                                                        }else if(val > 0){
                                                            color = 'green';
                                                        }else{
                                                            color = '#909B86';
                                                        }
                                                        if(cellvalue != ''){
                                                            cellvalue= "{!currencySymbol}"+thousandSeparator(cellvalue);
                                                            //cellvalue= cellvalue.substring(0,cellvalue.length-3);
                                                        }
                                                        return '<span class="cellWithoutBackground" style="background-color:' + color + ';">' + cellvalue + '</span>';
                                                   }, 
                                        formatoptions:{thousandsSeparator:",",decimalPlaces:0, prefix:"{!currencySymbol}"}, classes:'nonEditableCellsClass'}, 
                                {name:headings[7], index:headings[7], width:80, align:'right', editable:true, editrules:{required:true,number:true,minValue:0}, sortable:false, formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"}, classes:'editableCellsClass'}, 
                                {name:headings[8], index:headings[8], width:80, align:'right', editable:true, editrules:{required:true,number:true,minValue:0}, sortable:false, formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"}, classes:'editableCellsClass'},
                                {name:headings[9], index:headings[9], width:80, align:'right', editable:true, editrules:{required:true,number:true,minValue:0}, sortable:false, formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"}, classes:'editableCellsClass'},
                                {name:headings[10], index:headings[10], width:80, align:'right', editable:true, editrules:{required:true,number:true,minValue:0}, sortable:false, formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"}, classes:'editableCellsClass'},
                                {name:headings[11], index:headings[11], width:80, align:'right', editable:true, editrules:{required:true,number:true,minValue:0}, sortable:false, formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"}, classes:'editableCellsClass'},
                                {name:headings[12], index:headings[12], width:80, align:'right', editable:true, editrules:{required:true,number:true,minValue:0}, sortable:false, formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"}, classes:'editableCellsClass'},
                                {name:headings[13], index:headings[13], width:80, align:'right', editable:true, editrules:{required:true,number:true,minValue:0}, sortable:false, formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"}, classes:'editableCellsClass'},
                                {name:headings[14], index:headings[14], width:80, align:'right', editable:true, editrules:{required:true,number:true,minValue:0}, sortable:false, formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"}, classes:'editableCellsClass'},
                                {name:headings[15], index:headings[15], width:80, align:'right', editable:true, editrules:{required:true,number:true,minValue:0}, sortable:false, formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"}, classes:'editableCellsClass'},
                                {name:headings[16], index:headings[16], width:80, align:'right', editable:true, editrules:{required:true,number:true,minValue:0}, sortable:false, formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"}, classes:'editableCellsClass'},
                                {name:headings[17], index:headings[17], width:80, align:'right', editable:true, editrules:{required:true,number:true,minValue:0}, sortable:false, formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"}, classes:'editableCellsClass'},
                                {name:headings[18], index:headings[18], width:80, align:'right', editable:true, editrules:{required:true,number:true,minValue:0}, sortable:false, formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"}, classes:'editableCellsClass'},
                                {name:headings[19], index:headings[19], width:80, align:'right', editable:true, editrules:{required:true,number:true,minValue:0}, sortable:false, formatter:'currency',formatoptions:{thousandsSeparator:",",decimalPlaces: 0,prefix:"{!currencySymbol}"}, classes:'editableCellsClass'},
                                {name:headings[20], index:headings[20], width:1, hidden:true},
                                {name:headings[21], index:headings[21], width:1, hidden:true},
                                {name:headings[22], index:headings[22], width:1, hidden:true},
                                {name:headings[23], index:headings[23], width:1, hidden:true},
                                {name:headings[24], index:headings[24], width:1, hidden:true},
                                {name:headings[25], index:headings[25], width:1, hidden:true},
                                {name:headings[26], index:headings[26], width:1, hidden:true},
                                {name:headings[27], index:headings[27], width:1, hidden:true},
                                {name:headings[28], index:headings[28], width:1, hidden:true},
                                {name:headings[29], index:headings[29], width:1, hidden:true},
                                {name:headings[30], index:headings[30], width:1, hidden:true},
                                {name:headings[31], index:headings[31], width:1, hidden:true},
                                {name:headings[32], index:headings[32], width:1, hidden:true},
                            ], 
                            height:'auto',
                            autowidth: true,
                            viewrecords: true, 
                            pager: jQuery('#pager'), 
                            rowNum:75, 
                            rowList:[25,50,75], 
                            sortname: 'Id', 
                            sortorder: "asc", 
                            imgpath: 'themes/redmond/images',
                            grouping:true, 
                            groupingView : { 
                                groupField : ['opportunity'], 
                                groupText : ['<b>{0} - {1} Item(s)</b>'], 
                                groupCollapse : isCollapsed,
                                groupColumnShow : [false], 
                                groupOrder: ['asc'] 
                            },
                            caption: 'Forecast Information' ,
                            forceFit : true, 
                            cellEdit: true,
                            cellsubmit: 'clientArray', 
                            afterEditCell: function (id,name,val,iRow,iCol){
                                document.getElementById(iRow+'_'+name).select();
                                saveFlag = true;
                                updatedRows.push(iRow);
                                updatedRowsMap[iRow]= id;
                            },
                            loadComplete: function(){                                 
                                var rowIds = $("#celltbl").jqGrid('getDataIDs');
                                $.each(rowIds, function (i, row) {
                                    var rowData = $("#celltbl").getRowData(row);
                                    if(rowData.cell1 === 'false'){
                                        $("#celltbl").jqGrid("setCell", row, headings[7], "", "not-editable-cell");
                                    }
                                    if(rowData.cell2 === 'false'){
                                        $("#celltbl").jqGrid("setCell", row, headings[8], "", "not-editable-cell");
                                    }
                                    if(rowData.cell3 === 'false'){
                                        $("#celltbl").jqGrid("setCell", row, headings[9], "", "not-editable-cell");
                                    }                                   
                                    if(rowData.cell4 === 'false'){
                                        $("#celltbl").jqGrid("setCell", row, headings[10], "", "not-editable-cell");
                                    }
                                    if(rowData.cell5 === 'false'){
                                        $("#celltbl").jqGrid("setCell", row, headings[11], "", "not-editable-cell");
                                    }
                                    if(rowData.cell6 === 'false'){
                                        $("#celltbl").jqGrid("setCell", row, headings[12], "", "not-editable-cell");
                                    }
                                    if(rowData.cell7 === 'false'){
                                        $("#celltbl").jqGrid("setCell", row, headings[13], "", "not-editable-cell");
                                    }
                                    if(rowData.cell8 === 'false'){
                                        $("#celltbl").jqGrid("setCell", row, headings[14], "", "not-editable-cell");
                                    }
                                    if(rowData.cell9 === 'false'){
                                        $("#celltbl").jqGrid("setCell", row, headings[15], "", "not-editable-cell");
                                    }
                                    if(rowData.cell10 === 'false'){
                                        $("#celltbl").jqGrid("setCell", row, headings[16], "", "not-editable-cell");
                                    }
                                    if(rowData.cell11 === 'false'){
                                        $("#celltbl").jqGrid("setCell", row, headings[17], "", "not-editable-cell");
                                    }
                                    if(rowData.cell12 === 'false'){
                                        $("#celltbl").jqGrid("setCell", row, headings[18], "", "not-editable-cell");
                                    }
                                    if(rowData.cell13 === 'false'){
                                        $("#celltbl").jqGrid("setCell", row, headings[19], "", "not-editable-cell");
                                    }
                                }); 
                            },
                            afterSaveCell : function(rowid,name,val,iRow,iCol) {
                                saveFlag = true;
                                updatedRows.push(iRow);
                                updatedRowsMap[iRow]= rowid;
                                jQuery("#celltbl").jqGrid('setCell',rowid,name,val,{'font-weight':'bold','color':'red','background-color':''});
                            },
                            gridComplete: function () {
                                rowCount = jQuery("#celltbl").getDataIDs().length;
                            },
                            onPaging: function(id){ 
                                var answer = true;
                                if(saveFlag == true){//If user made changes in the editable cells
                                    answer = confirm("The changes are not saved. Do you want to save changes?")
                                }
                                if(answer && saveFlag){
                                    saveData();
                                    saveFlag = false;
                                    //return 'stop';
                                }else{
                                    //Clear updated rows from array
                                    updatedRows = updatedRows.splice(updatedRows.length);
                                    saveFlag = false;
                                }
                            }
                        });
                      }
                        jQuery("#celltbl")
                            .navGrid('#pager',{edit:false,add:false,del:false,search:false})
                            .navButtonAdd('#pager',{
                                 caption:"{!$Label.Expand_All}", 
                                 buttonicon:"ui-icon-add", 
                                 onClickButton: function(){ 
                                   $("#celltbl").jqGrid('setGridParam',{groupingView: {groupCollapse : false}}).trigger('reloadGrid');
                                   isCollapsed = false;
                                 }, 
                                 position:"last"
                            })
                            .navButtonAdd('#pager',{
                                caption:"{!$Label.Collapse_All}", 
                                buttonicon:"ui-icon-add", 
                                onClickButton: function(){ 
                                    $("#celltbl").jqGrid('setGridParam',{groupingView: {groupCollapse : true}}).trigger('reloadGrid'); 
                                    isCollapsed = true;
                                }, 
                                position:"last"
                            });
                    }
                    
                    function currencyFmatter (cellvalue, options, rowObject){
                        if(type == 'Manufacturing Germany'){
                            return "{!currencySymbol}"+cellvalue;
                        } else {
                            if(stage == 'Proposal' && cellvalue != ''){
                                return "{!currencySymbol}"+cellvalue;
                            }else{
                                return cellvalue;
                            }
                        }
                    }
                                        
                    if("{!doRefresh}" == "true"){
                        document.getElementById('loadStatus').style.display='none';
                        document.getElementById('searchStatus').style.display='none';
                        document.getElementById('saveStatus').style.display='none';
                        document.getElementById('nxtStatus').style.display='none';
                        document.getElementById('preStatus').style.display='none';
                        if("{!noMoreAdPeriods}" == "true"){
                            alert('No Ad Periods found for next cycle.')
                            var mno = currentDate.getMonth();
                            mno -= 6;
                            currentDate.setMonth(mno);
                            cDateString = currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate();
                        }
                        if("{!noPre}" == "true"){
                            alert('No Ad Periods found for previous cycle.');
                            currentDate = new Date();
                            cDateString = currentDate.getFullYear()+'-'+(currentDate.getMonth()+1)+'-'+currentDate.getDate();
                            //cDateString = currentDate.getFullYear()+'-'+(currentDate.getMonth())+'-'+currentDate.getDate();
                        }
                        reload();
                    }
                    function thousandSeparator(n,sep) {
                        var sRegExp = new RegExp('(-?[0-9]+)([0-9]{3})'),sValue=n+'';
                    
                        if (sep === undefined) {sep=',';}
                        while(sRegExp.test(sValue)) {
                            sValue = sValue.replace(sRegExp, '$1'+sep+'$2');
                        }
                        return sValue;
                    }
                </script>
                <!-- <apex:pageMessage severity="INFO" strength="3" summary="No Records Found." rendered="{!(!dataFound)}"/> -->
                <div id="loadStatus" style="display:none; color:red; font-weight:bold;">
                    Loading...
                </div>
                <div id="searchStatus" style="display:none; color:red; font-weight:bold;">
                    Searching...
                </div>
                <div id="saveStatus" style="display:none; color:red; font-weight:bold;">
                    Saving...
                </div>
                <div id="nxtStatus" style="display:none; color:red; font-weight:bold;">
                    Fetching Next Cycles...
                </div>
                <div id="preStatus" style="display:none; color:red; font-weight:bold;">
                    Fetching Previous Cycles...
                </div>
                
                <apex:pageMessages rendered="{!(!dataFound)}"/>
                <apex:pageBlock id="tblock" rendered="{!dataFound}">
                    <table width="100%">
                        <tr>
                            <td width="15%">
                                <apex:CommandLink value="{!$Label.Previous_Cycle}" onClick="preCycle();return false;"/>
                            </td>
                            <td width="70%" align="center">
                                <apex:commandButton value="{!$Label.Save}" onClick="save();return false;" style="width:100px;"/>
                                <apex:commandButton value="{!$Label.Splits}" onClick="window.open('/apex/MyForecastQuarterSplits','_blank')" style="width:100px;" rendered="{!if(rType=='Manufacturing',true,false)}"/>
                            </td>
                            <td width="15%" align="right">
                                <apex:CommandLink value="{!$Label.Next_Cycle}" onClick="nextCycle();return false;"/>
                            </td>
                        </tr>
                    </table>
                    <table id="celltbl"></table> <div id="pager"></div>
                    
                    <table width="100%">
                        <tr>
                            <td width="15%">
                                <apex:CommandLink value="{!$Label.Previous_Cycle}" onClick="preCycle();return false;"/>
                            </td>
                            <td width="75%" align="right">
                                <apex:CommandLink value="{!$Label.Next_Cycle}" onClick="nextCycle();return false;"/>
                            </td>
                        </tr>
                    </table>
                </apex:pageBlock>
            </apex:outputPanel> 
        </body>
    </apex:form>
</apex:page>